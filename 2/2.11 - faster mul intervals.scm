(load "2/2.07 - selectors for interval object.scm")

(define (mul-interval x y)
  (let ((x1 (lower-bound x))
        (x2 (upper-bound x))
        (y1 (lower-bound y))
        (y2 (upper-bound y)))
    (cond ((and (positive? x1) (positive? x2) (positive? y1) (positive? y2))
           (make-interval (* x1 y1) (* x2 y2)))
          ((and (positive? x1) (positive? x2) (negative? y1) (positive? y2))
           (make-interval (* x2 y1) (* x2 y2)))
          ((and (positive? x1) (positive? x2) (negative? y1) (negative? y2))
           (make-interval (* x2 y1) (* x1 y2)))
          ((and (negative? x1) (positive? x2) (positive? y1) (positive? y2))
           (make-interval (* x1 y2) (* x2 y2)))
          ((and (negative? x1) (negative? x2) (negative? y1) (negative? y2))
           (make-interval (* x2 y2) (* x1 y1)))
          ((and (negative? x1) (positive? x2) (negative? y1) (negative? y2))
           (make-interval (* x2 y1) (* x1 y1)))
          ((and (negative? x1) (negative? x2) (positive? y1) (positive? y2))
           (make-interval (* x1 y2) (* x2 y1)))
          ((and (negative? x1) (negative? x2) (negative? y1) (positive? y2))
           (make-interval (* x1 y2) (* x1 y1)))
          (else
           (make-interval (min (* x1 y2) (* x2 y1))
                          (max (* x1 y1) (* x2 y2)))))))
